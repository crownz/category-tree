{"version":3,"sources":["webpack:///./src/app/services/tree-category.service.ts","webpack:///./src/app/dialogs/new-node/new-node.component.ts","webpack:///./src/app/services/tree-category-iterative.service.ts","webpack:///./src/app/services/tree-category-recursive.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/tree-container/tree-container.component.ts","webpack:///./src/app/components/tree-node/tree-node.component.ts","webpack:///./src/app/utils/tree-creation.utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.less","webpack:///./src/app/components/tree-container/tree-container.component.less","webpack:///./src/app/components/tree-node/tree-node.component.less","webpack:///./src/app/dialogs/new-node/new-node.component.less","webpack:///./src/app/app.component.html","webpack:///./src/app/components/tree-container/tree-container.component.html","webpack:///./src/app/components/tree-node/tree-node.component.html","webpack:///./src/app/dialogs/new-node/new-node.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;AACyC;AAGzC,IAAsB,mBAAmB;IAAzC;IAEA,CAAC;IAAD,0BAAC;AAAD,CAAC;AAFqB,mBAAmB;IADxC,wFAAU,EAAE;GACS,mBAAmB,CAExC;AAFwC;;;;;;;;;;;;;;;;;;;;;ACJS;AACJ;AAO9C,IAAa,aAAa;IAIxB,uBAAmB,SAAqC;QAArC,cAAS,GAAT,SAAS,CAA4B;QAFxD,aAAQ,GAAW,EAAE,CAAC;IAEsC,CAAC;IAE7D,gCAAQ,GAAR;IACA,CAAC;IAEH,oBAAC;AAAD,CAAC;AATY,aAAa;IALzB,uFAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kCAAwC;QACxC,kCAAsC;KACvC,CAAC;yDAK8B,sEAAW,oBAAX,sEAAW;GAJ9B,aAAa,CASzB;AATyB;;;;;;;;;;;;;;;;;;;;;;ACPkC;AAE5D;IAAkD,gDAAmB;IAArE;;IAqCA,CAAC;IAnCC;;;;;;OAMG;IACH,4CAAK,GAAL,UAAM,IAAU;QACd,IAAI,MAAM,GAAgB,EAAE,CAAC;QAC7B,IAAI,SAAS,GAAgB,EAAE,CAAC;QAChC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErB,OAAM,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3B,IAAI,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACpD,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YACjE,CAAC;QACH,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACK,uDAAgB,GAAxB,UAAyB,MAAmB,EAAE,MAAmB;QAC/D,IAAI,MAAM,GAAgB,EAAE,CAAC;QAC7B,MAAM,CAAC,IAAI,OAAX,MAAM,EAAS,MAAM,QAAK,MAAM,GAAE;QAClC,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACH,mCAAC;AAAD,CAAC,CArCiD,mFAAmB,GAqCpE;;AAED;;GAEG;AACH,wDAAe,cAAM,WAAI,4BAA4B,EAAE,EAAlC,CAAkC,EAAC;;;;;;;;;;;;;;;;;;;;;AC5CI;AAE5D;IAAkD,gDAAmB;IAArE;;IAqBA,CAAC;IAnBC;;;;;;;OAOG;IACH,4CAAK,GAAL,UAAM,IAAU;QAAhB,iBASC;QARC,IAAI,MAAM,GAAgB,EAAE,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAElB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAK,IAAI,aAAM,CAAC,IAAI,OAAX,MAAM,EAAS,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAhC,CAAiC,CAAC,CAAC;QACpE,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEH,mCAAC;AAAD,CAAC,CArBiD,mFAAmB,GAqBpE;;AACD;;GAEG;AACH,wDAAe,cAAM,WAAI,4BAA4B,EAAE,EAAlC,CAAkC,EAAC;;;;;;;;AC5BxD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;ACVO;AAS3D,IAAa,YAAY;IAAzB;IACA,CAAC;IAAD,mBAAC;AAAD,CAAC;AADY,YAAY;IAPxB,uFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,aAAa,EAAE,wEAAiB,CAAC,IAAI;QACrC,kCAAmC;QACnC,4DAC6E;KAC9E,CAAC;GACW,YAAY,CACxB;AADwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACI;AACF;AAEI;AAC+C;AACf;AACE;AACA;AACZ;AACpB;AACqB;AAgCtE,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IA9BrB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,mHAAsB;YACtB,oGAAiB;YACjB,4FAAa;SACd;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,iEAAU;YACV,0EAAc;SACf;QACD,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,4FAAmB;gBAC5B,UAAU,EAAE,0FAAuB;gBACnC,KAAK,EAAE,IAAI;aACZ;YACD;gBACE,OAAO,EAAE,4FAAmB;gBAC5B,UAAU,EAAE,0FAAuB;gBACnC,KAAK,EAAE,IAAI;aACZ;SACF;QACD,eAAe,EAAE;YACf,4FAAa;SACd;QACD,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AC5C4B;AAE0C;AAC1B;AAC0B;AACpB;AAC7B;AAC8B;AAEzE,IAAM,cAAc,GAAW,WAAW,CAAC;AAC3C,IAAM,cAAc,GAAW,WAAW,CAAC;AAC3C,IAAM,UAAU,GAAW,CAAC,CAAC;AAO7B,IAAa,sBAAsB;IAgCjC,gCAAoB,YAAiC,EAAS,MAAgB;QAA1D,iBAAY,GAAZ,YAAY,CAAqB;QAAS,WAAM,GAAN,MAAM,CAAU;QAC5E,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,yCAAQ,GAAR;IAEA,CAAC;IAED;;;;;OAKG;IACH,2CAAU,GAAV,UAAW,IAAW;QAAtB,iBAaC;QAZC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAa,CAAC,CAAC;QAChD,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;gBACnB,IAAI,OAAO,GAAS,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAC,CAAC;gBACzE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YACjE,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3B,IAAI,OAAO,GAAS,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,UAAU,EAAC,CAAC;gBACrE,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;gBACxB,KAAI,CAAC,UAAU,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,qDAAoB,GAApB;QACE,IAAI,CAAC,QAAQ,GAAG,qFAAiB,CAAC,gBAAgB,EAAE,CAAC;QACrD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjE,CAAC;IAED;;;OAGG;IACH,8CAAa,GAAb;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,YAAY,+GAA4B,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,YAAY,+GAA4B,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAEH,6BAAC;AAAD,CAAC;AArFY,sBAAsB;IALlC,uFAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,kCAA8C;QAC9C,kCAA4C;KAC7C,CAAC;yDAiCkC,4FAAmB,oBAAnB,4FAAmB,sDAAiB,mEAAQ,oBAAR,mEAAQ;GAhCnE,sBAAsB,CAqFlC;AArFkC;;;;;;;;;;;;;;;;;;;;;;;AClBoB;AACR;AAO/C,IAAa,iBAAiB;IAI5B;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IAEA,CAAC;IAEH,wBAAC;AAAD,CAAC;AARU;IAAR,mFAAK,EAAE;kDAAO,wDAAI,oBAAJ,wDAAI;+CAAC;AAFT,iBAAiB;IAL7B,uFAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kCAAyC;QACzC,kCAAuC;KACxC,CAAC;;GACW,iBAAiB,CAU7B;AAV6B;;;;;;;;;;;;;;;;;ACN9B;AAAA;IAAA;IAkBA,CAAC;IAhBC;;;OAGG;IACI,kCAAgB,GAAvB;QACE,IAAI,KAAK,GAAS,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAG,KAAK,EAAE,CAAC,EAAC,CAAC;QAC5D,IAAI,KAAK,GAAS,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;QAC3D,IAAI,KAAK,GAAS,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;QAC3D,IAAI,KAAK,GAAS,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAG,KAAK,EAAE,CAAC,EAAC,CAAC;QAC5D,IAAI,KAAK,GAAS,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;QACvE,IAAI,KAAK,GAAS,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;QAC3D,IAAI,KAAK,GAAS,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAG,KAAK,EAAE,CAAC,EAAC,CAAC;QACjE,IAAI,KAAK,GAAS,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;QAC9E,IAAI,QAAQ,GAAG,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;QACnE,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IACH,wBAAC;AAAD,CAAC;;;;;;;;;;ACpBD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,0CAA2C,yBAAyB,yBAAyB,kBAAkB,iCAAiC,kCAAkC,mCAAmC,mCAAmC,8BAA8B,+BAA+B,gCAAgC,GAAG,uCAAuC,yBAAyB,yBAAyB,kBAAkB,qBAAqB,gBAAgB,GAAG,mCAAmC,iBAAiB,GAAG,iCAAiC,yBAAyB,yBAAyB,kBAAkB,mCAAmC,kCAAkC,gCAAgC,gCAAgC,GAAG,oCAAoC,iBAAiB,GAAG,oDAAoD,yBAAyB,yBAAyB,kBAAkB,iBAAiB,GAAG,+DAA+D,uBAAuB,iBAAiB,sBAAsB,oBAAoB,GAAG;;AAEvmC;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,4CAA6C,iBAAiB,yBAAyB,yBAAyB,kBAAkB,iCAAiC,kCAAkC,mCAAmC,mCAAmC,sBAAsB,kBAAkB,kBAAkB,GAAG,qCAAqC,yBAAyB,yBAAyB,kBAAkB,iCAAiC,kCAAkC,mCAAmC,mCAAmC,GAAG,wCAAwC,yBAAyB,yBAAyB,kBAAkB,mCAAmC,kCAAkC,gCAAgC,gCAAgC,GAAG,gDAAgD,yBAAyB,yBAAyB,kBAAkB,wBAAwB,oBAAoB,oBAAoB,GAAG,uDAAuD,uBAAuB,GAAG;;AAEzjC;;;AAGA;AACA,2C;;;;;;;ACXA,+F;;;;;;;ACAA,oHAAoH,aAAa,4hBAA4hB,mCAAmC,iEAAiE,YAAY,6J;;;;;;;ACA7wB,6BAA6B,aAAa,W;;;;;;;ACA1C,ipB","file":"main.bundle.js","sourcesContent":["import { Node } from '../models/node.model';\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport abstract class TreeCategoryService {\n  abstract build(tree: Node): Array<Node>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tree-category.service.ts","import { Component, OnInit } from '@angular/core';\nimport {MdDialogRef} from \"@angular/material\";\n\n@Component({\n  selector: 'app-new-node',\n  templateUrl: './new-node.component.html',\n  styleUrls: ['new-node.component.less']\n})\nexport class NewNodeDialog implements OnInit {\n\n  nodeName: string = '';\n\n  constructor(public dialogRef: MdDialogRef<NewNodeDialog>) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialogs/new-node/new-node.component.ts","import { Node } from '../models/node.model';\nimport {TreeCategoryService} from \"./tree-category.service\";\n\nexport class TreeCategoryIterativeService extends TreeCategoryService {\n\n  /**\n   * Creates array of tree nodes in iterative way\n   * in order which nodes will be printed out\n   * when visualizing.\n   * @param tree\n   * @returns {Array<Node>}\n   */\n  build(tree: Node): Array<Node> {\n    let result: Array<Node> = [];\n    let toIterate: Array<Node> = [];\n    toIterate.push(tree);\n\n    while(toIterate.length > 0) {\n      let current = toIterate.shift();\n      result.push(current);\n      if (current.children && current.children.length > 0) {\n        toIterate = this.mergeToBeginning(toIterate, current.children);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Merges arrays by pushing second\n   * array to the beginning of first one.\n   * @param array1\n   * @param array2\n   * @returns {Array}\n   */\n  private mergeToBeginning(array1: Array<Node>, array2: Array<Node>): Array<Node> {\n    let result: Array<Node> = [];\n    result.push(...array2, ...array1);\n    return result;\n  }\n}\n\n/**\n * Exporting factory.\n */\nexport default () => new TreeCategoryIterativeService();\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tree-category-iterative.service.ts","import { Node } from '../models/node.model';\nimport {TreeCategoryService} from \"./tree-category.service\";\n\nexport class TreeCategoryRecursiveService extends TreeCategoryService {\n\n  /**\n   * Creates array of tree nodes in recursive way\n   * in order which nodes will be printed out\n   * when visualizing.\n   * Stack overflow might occur if tree depth is too big.\n   * @param tree\n   * @returns {Array<Node>}\n   */\n  build(tree: Node): Array<Node> {\n    let result: Array<Node> = [];\n    result.push(tree);\n\n    if (tree.children && tree.children.length > 0) {\n      tree.children.forEach(child => result.push(...this.build(child)));\n    }\n\n    return result;\n  }\n\n}\n/**\n * Exporting factory.\n */\nexport default () => new TreeCategoryRecursiveService();\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tree-category-recursive.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 408;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 408\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './app.component.html',\n  styleUrls: ['app.component.less',\n  '../../node_modules/@angular/material/core/theming/prebuilt/indigo-pink.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { TreeContainerComponent } from './components/tree-container/tree-container.component';\nimport { TreeNodeComponent } from './components/tree-node/tree-node.component';\nimport recursiveServiceFactory from \"./services/tree-category-recursive.service\";\nimport iterativeServiceFactory from \"./services/tree-category-iterative.service\";\nimport {TreeCategoryService} from \"./services/tree-category.service\";\nimport {MaterialModule} from \"@angular/material\";\nimport { NewNodeDialog } from './dialogs/new-node/new-node.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TreeContainerComponent,\n    TreeNodeComponent,\n    NewNodeDialog\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule\n  ],\n  providers: [\n    {\n      provide: TreeCategoryService,\n      useFactory: iterativeServiceFactory,\n      multi: true\n    },\n    {\n      provide: TreeCategoryService,\n      useFactory: recursiveServiceFactory,\n      multi: true\n    }\n  ],\n  entryComponents: [\n    NewNodeDialog\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\nimport { Node } from '../../models/node.model';\nimport {TreeCategoryRecursiveService} from \"../../services/tree-category-recursive.service\";\nimport {TreeCreationUtils} from \"../../utils/tree-creation.utils\";\nimport {TreeCategoryIterativeService} from \"../../services/tree-category-iterative.service\";\nimport {NewNodeDialog} from \"../../dialogs/new-node/new-node.component\";\nimport {MdDialog} from \"@angular/material\";\nimport {TreeCategoryService} from \"../../services/tree-category.service\";\n\nconst TYPE_RECURSIVE: string = \"Recursive\";\nconst TYPE_ITERATIVE: string = \"Iterative\";\nconst ROOT_LEVEL: number = 0;\n\n@Component({\n  selector: 'tree-container',\n  templateUrl: './tree-container.component.html',\n  styleUrls: ['tree-container.component.less']\n})\nexport class TreeContainerComponent implements OnInit {\n\n  /**\n   * Root node of currently displayed tree.\n   */\n  rootNode: Node;\n\n  /**\n   * Array used to store tree nodes in\n   * display order.\n   */\n  nodesArray: Array<Node>;\n\n  /**\n   * Current tree service used for\n   * nodes array generation.\n   */\n  currentTreeService: TreeCategoryService;\n\n  /**\n   * List of all instance of available tree services.\n   * At the moment it is assumed that two services\n   * will be injected.\n   */\n  allTreeServices;\n\n  /**\n   * Type of currently used service for\n   * nodes array building.\n   */\n  serviceType;\n\n  constructor(private treeServices: TreeCategoryService, public dialog: MdDialog) {\n    this.serviceType = TYPE_RECURSIVE;\n    this.allTreeServices = treeServices;\n    this.currentTreeService = treeServices[1];\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Opens dialog for new node creation.\n   * If no node is passed in, it is assumed that\n   * new tree is being created.\n   * @param node\n   */\n  addNewNode(node?: Node): void {\n    let dialogRef = this.dialog.open(NewNodeDialog);\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && node) {\n        let newNode: Node = {value: result, children: [], level: node.level + 1};\n        node.children.push(newNode);\n        this.nodesArray = this.currentTreeService.build(this.rootNode);\n      } else if (result && !node) {\n        let newNode: Node = {value: result, children: [], level: ROOT_LEVEL};\n        this.rootNode = newNode;\n        this.nodesArray = [this.rootNode];\n      }\n    });\n  }\n\n  /**\n   * Generates new tree.\n   */\n  generateStartingTree(): void {\n    this.rootNode = TreeCreationUtils.createSampleTree();\n    this.nodesArray = this.currentTreeService.build(this.rootNode);\n  }\n\n  /**\n   * Toggles tree service type between\n   * iterative and recursive.\n   */\n  toggleBuilder() {\n    if (this.currentTreeService instanceof TreeCategoryRecursiveService) {\n      this.serviceType = TYPE_ITERATIVE;\n      this.currentTreeService = this.allTreeServices[0];\n    } else if (this.currentTreeService instanceof TreeCategoryIterativeService) {\n      this.serviceType = TYPE_RECURSIVE;\n      this.currentTreeService = this.allTreeServices[1];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tree-container/tree-container.component.ts","import {Component, OnInit, Input} from '@angular/core';\nimport { Node } from '../../models/node.model';\n\n@Component({\n  selector: 'tree-node',\n  templateUrl: './tree-node.component.html',\n  styleUrls: ['tree-node.component.less']\n})\nexport class TreeNodeComponent implements OnInit {\n\n  @Input() node: Node;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tree-node/tree-node.component.ts","import {Node} from '../models/node.model';\n\nexport class TreeCreationUtils {\n\n  /**\n   * Creates  sample tree using hardcoded values.\n   * @returns {{value: string, children: (Node|Node)[], indentation: number}}\n   */\n  static createSampleTree(): Node {\n    let node6: Node = {value: 'node6', children: [],  level: 3};\n    let node7: Node = {value: 'node7', children: [], level: 3};\n    let node2: Node = {value: 'node2', children: [], level: 2};\n    let node3: Node = {value: 'node3', children: [],  level: 2};\n    let node4: Node = {value: 'node4', children: [node6, node7], level: 2};\n    let node5: Node = {value: 'node5', children: [], level: 2};\n    let node0: Node = {value: 'node0', children: [node2],  level: 1};\n    let node1: Node = {value: 'node1', children: [node3, node4, node5], level: 1};\n    let rootNode = {value: 'Root', children: [node0, node1], level: 0};\n    return rootNode;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils/tree-creation.utils.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.less\n// module id = 615\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".tree-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n}\\n.tree-container .builder-type-title {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  text-align: left;\\n  width: 100%;\\n}\\n.tree-container .general-button {\\n  margin: 10px;\\n}\\n.tree-container .buttons-line {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n}\\n.tree-container .nodes-container {\\n  width: 600px;\\n}\\n.tree-container .nodes-container .node-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 40px;\\n}\\n.tree-container .nodes-container .node-container .node-name {\\n  margin-right: 10px;\\n  height: 40px;\\n  line-height: 40px;\\n  font-size: 18px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tree-container/tree-container.component.less\n// module id = 616\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tree-node/tree-node.component.less\n// module id = 617\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".dialog-container {\\n  width: 300px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  background: white;\\n  padding: 20px;\\n  margin: -24px;\\n}\\n.dialog-container .form-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n.dialog-container .buttons-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n}\\n.dialog-container .buttons-container .filler {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n.dialog-container .buttons-container .cancel-button {\\n  margin-right: 10px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialogs/new-node/new-node.component.less\n// module id = 618\n// module chunks = 1","module.exports = \"<div class=\\\"app-container\\\">\\n  <tree-container></tree-container>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 620\n// module chunks = 1","module.exports = \"<div class=\\\"tree-container\\\">\\n  <div class=\\\"builder-type-title\\\">\\n    Current builder type: {{serviceType}}\\n  </div>\\n  <div class=\\\"buttons-line\\\">\\n    <button md-raised-button color=\\\"warn\\\" (click)=\\\"toggleBuilder()\\\" class=\\\"general-button\\\">Toggle builder!</button>\\n    <button md-raised-button color=\\\"primary\\\" (click)=\\\"generateStartingTree()\\\" class=\\\"general-button\\\">Generate tree!</button>\\n    <button md-raised-button color=\\\"primary\\\" (click)=\\\"addNewNode()\\\" class=\\\"general-button\\\">Start new tree!</button>\\n  </div>\\n\\n  <div class=\\\"nodes-container\\\">\\n    <div *ngFor=\\\"let node of nodesArray, let i = index\\\" [ngStyle]=\\\"{marginLeft: node.level * 30 + 'px'}\\\" class=\\\"node-container\\\">\\n      <div class=\\\"node-name\\\">- {{node.value}}</div>\\n      <button md-icon-button (click)=\\\"addNewNode(node)\\\" mdTooltip=\\\"Add child!\\\"><md-icon>add</md-icon></button>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tree-container/tree-container.component.html\n// module id = 621\n// module chunks = 1","module.exports = \"<div>\\n  {{node?.value}}\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tree-node/tree-node.component.html\n// module id = 622\n// module chunks = 1","module.exports = \"<div class=\\\"dialog-container\\\">\\n  <form #nodeForm=\\\"ngForm\\\" class=\\\"form-container\\\">\\n    <md-input-container dividerColor=\\\"primary\\\">\\n      <input name=\\\"nameOfNode\\\" mdInput [(ngModel)]=\\\"nodeName\\\" placeholder=\\\"Node name\\\" required >\\n    </md-input-container>\\n    <div class=\\\"buttons-container\\\">\\n      <div class=\\\"filler\\\"></div>\\n      <button md-raised-button (click)=\\\"dialogRef.close()\\\" class=\\\"cancel-button\\\">CANCEL</button>\\n      <button md-raised-button (click)=\\\"dialogRef.close(nodeName)\\\" class=\\\"add-button\\\" color=\\\"primary\\\" [disabled]=\\\"!nodeForm.valid\\\">ADD NODE</button>\\n    </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialogs/new-node/new-node.component.html\n// module id = 623\n// module chunks = 1"],"sourceRoot":""}